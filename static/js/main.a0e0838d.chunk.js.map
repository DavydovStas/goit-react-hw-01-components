{"version":3,"sources":["components/Profile/Profile.module.css","components/TransactionHistory/TransactionHistory.module.css","components/TransactionHistory/Transaction.module.css","components/Statistics/Statistics.module.css","components/FriendList/FreindsList.module.css","components/Profile/Profile.js","components/Statistics/getRandomInt.js","components/Statistics/Statistics.js","components/FriendList/FriendList.js","components/TransactionHistory/Transaction.js","components/TransactionHistory/TransactionHistory.js","App.js","index.js"],"names":["module","exports","Profile","props","name","tag","location","avatar","stats","className","styles","profile","profileDescription","src","alt","profileAvatar","profileStatsList","profileStatItem","followers","views","likes","getRandomInt","min","max","Math","floor","random","Statistical","title","statistic","statisticsList","map","stat","statisticsItem","style","backgroundColor","label","percentage","id","FriendsList","friends","friendsList","friend","friendItem","friendStatus","isOnline","width","propType","PropTypes","arrayOf","exact","string","isRequired","number","bool","Transaction","type","amount","currency","transactionRow","transactionDiscription","TransactionHistory","items","tableHead","tableHeadRow","headItem","item","tableBody","App","user","statisticalData","transactions","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.a0e0838d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__1KEPV\",\"profileDescription\":\"Profile_profileDescription__353Qn\",\"profileAvatar\":\"Profile_profileAvatar__BZ0wL\",\"profileStatsList\":\"Profile_profileStatsList__2tgY0\",\"profileStatItem\":\"Profile_profileStatItem__2kkyF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableHeadRow\":\"TransactionHistory_tableHeadRow__2gO3W\",\"headItem\":\"TransactionHistory_headItem__mc42C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionRow\":\"Transaction_transactionRow__1rv6c\",\"transactionDiscription\":\"Transaction_transactionDiscription__2x1-V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistic\":\"Statistics_statistic__3cltl\",\"statisticsList\":\"Statistics_statisticsList__1SHjs\",\"statisticsItem\":\"Statistics_statisticsItem__2Pw9b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendsList\":\"FreindsList_friendsList__vr4Wu\",\"friendItem\":\"FreindsList_friendItem__D9XM6\",\"friendStatus\":\"FreindsList_friendStatus__2XuSr\"};","import PropTypes from 'prop-types'\r\nimport styles from './Profile.module.css'\r\n\r\nexport default function Profile(props) {\r\n  const { name, tag, location, avatar, stats } = props\r\n  return (\r\n  <div className={ styles.profile}>\r\n  <div className={ styles.profileDescription}>\r\n    <img\r\n          src={avatar}\r\n          alt={name}\r\n          className={ styles.profileAvatar}\r\n    />\r\n    <p className=\"name\"> {name}</p>\r\n    <p className=\"tag\">@ {tag}</p>\r\n    <p className=\"location\"> {location}</p>\r\n  </div>\r\n\r\n  <ul className={ styles.profileStatsList}>\r\n    <li className={styles.profileStatItem}>\r\n      <span className=\"label\">Followers</span>\r\n      <span className=\"quantity\"> {stats.followers}</span>\r\n    </li>\r\n    <li className={styles.profileStatItem}>\r\n      <span className=\"label\">Views</span>\r\n      <span className=\"quantity\"> {stats.views}</span>\r\n    </li>\r\n    <li className={styles.profileStatItem}>\r\n      <span className=\"label\">Likes</span>\r\n      <span className=\"quantity\"> {stats.likes}</span>\r\n    </li>\r\n  </ul>\r\n</div>)\r\n};\r\n\r\nProfile.propTypes = {\r\n  name: PropTypes.string,\r\n  tag: PropTypes.string,\r\n  location: PropTypes.string,\r\n  avatar: PropTypes.string,\r\n  stats: PropTypes.object,\r\n}","export default function getRandomInt(min, max) {\r\n  return Math.floor(Math.random() * (max - min)) + min;\r\n}","import PropTypes from 'prop-types'\r\nimport styles from './Statistics.module.css'\r\nimport getRandomInt from './getRandomInt'\r\n\r\nexport default function Statistical(props) {\r\n  const { title, stats} = props;\r\n  return (<section className={styles.statistic}>\r\n    {title && (\r\n      <h2 className=\"title\">{title}</h2>\r\n    )}\r\n    \r\n    <ul className={styles.statisticsList}>\r\n\r\n      {\r\n        stats.map((stat) => (\r\n          <li className={styles.statisticsItem} key={stat.id}\r\n            style={{ backgroundColor: 'rgb(' + getRandomInt(0, 255) + ', ' + getRandomInt(0, 255) + ', ' + getRandomInt(0, 255) + ')' }}\r\n          >\r\n          <span className=\"label\">{stat.label}</span>\r\n          <span className=\"percentage\">{stat.percentage}%</span>\r\n        </li>\r\n        ))\r\n      }\r\n\r\n    </ul>\r\n  </section>)\r\n};\r\n\r\nStatistical.propTypes = {\r\n  title: PropTypes.string,\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.exact(\r\n      {\r\n        id: PropTypes.string.isRequired,\r\n        label: PropTypes.string.isRequired,\r\n        percentage: PropTypes.number.isRequired,\r\n      }\r\n    )\r\n  )\r\n}","import PropTypes from 'prop-types'\r\nimport style from './FreindsList.module.css'\r\n\r\nexport default function FriendsList(props) { \r\n  const { friends } = props;\r\n  return (<ul className={style.friendsList} >\r\n  {\r\n      (friends.map((friend) => (\r\n        <li className={style.friendItem} key={friend.name}>\r\n          <span className={style.friendStatus}\r\n            style={{ backgroundColor: friend.isOnline ? '#1ee352' : '#eb3915' }}\r\n          >\r\n          </span>\r\n          <img className=\"avatar\" src={friend.avatar} alt={friend.name} width=\"48\" />\r\n          <p className=\"name\">{friend.name}</p>\r\n      </li>\r\n    )))\r\n  }\r\n</ul>)\r\n}\r\n\r\nFriendsList.propType = { \r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.exact(\r\n      {\r\n        avatar: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        id: PropTypes.number.isRequired,\r\n        isOnline: PropTypes.bool.isRequired,\r\n      })\r\n  )\r\n}\r\n","import PropTypes from 'prop-types'\r\nimport styles from './Transaction.module.css'\r\n\r\nexport default function Transaction(props) {\r\n  const { type, amount, currency } = props;\r\n  return (<tr className={styles.transactionRow}>\r\n            <td className={styles.transactionDiscription}>{type}</td>\r\n            <td className={styles.transactionDiscription}>{amount}</td>\r\n            <td className={styles.transactionDiscription}>{currency}</td>\r\n          </tr>)\r\n}\r\n \r\nTransaction.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n  amount: PropTypes.string.isRequired,\r\n  currency:PropTypes.string.isRequired,\r\n}","import Transaction from './Transaction'\r\nimport PropTypes from 'prop-types'\r\nimport styles from './TransactionHistory.module.css'\r\n\r\nexport default function TransactionHistory({ items }) {\r\n  return (\r\n    <table className=\"transaction-history\">\r\n      <thead className={styles.tableHead}>\r\n        <tr className={styles.tableHeadRow}>\r\n          <th className={styles.headItem}>Type</th>\r\n          <th className={styles.headItem}>Amount</th>\r\n          <th className={styles.headItem}>Currency</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      {items.map(item => (\r\n        <tbody className={styles.tableBody} key={item.id}>\r\n          <Transaction\r\n            type={item.type}\r\n            amount={item.amount}\r\n            currency={item.currency}\r\n          />\r\n        </tbody>\r\n        ))\r\n      }\r\n    </table>\r\n  )\r\n }\r\n\r\nTransactionHistory.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape(\r\n      {\r\n        id: PropTypes.string.isRequired,\r\n      }\r\n    )\r\n  )\r\n}\r\n","import Profile from './components/Profile/Profile'\r\nimport user from './components/Profile/user.json'\r\nimport Statistics from './components/Statistics/Statistics'\r\nimport statisticalData from './components/Statistics/statistical-data.json'\r\nimport FriendList from './components/FriendList/FriendList'\r\nimport friends from './components/FriendList/friends.json'\r\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory'\r\nimport transactions from './components/TransactionHistory/transactions.json'\r\n\r\nexport default function App() { \r\n  return (<div>\r\n    <Profile\r\n      name={user.name}\r\n      tag={user.tag}\r\n      location={user.location}\r\n      avatar={user.avatar}\r\n      stats={user.stats}/>\r\n    <Statistics \r\n      stats={statisticalData} />\r\n    <FriendList\r\n      friends={friends} />\r\n    <TransactionHistory\r\n      items={transactions} />\r\n  </div>\r\n  )\r\n}","import ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App/>, document.querySelector('#root'))"],"sourceRoot":""}